version: '3.8'

services:
  # Traefik - Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: drwell_traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yml:/traefik.yml:ro
      - ./docker/traefik/acme.json:/acme.json
    networks:
      - drwell_network
    labels:
      - "traefik.enable=true"

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: drwell_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-drwell}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-drwell_secret}
      POSTGRES_DB: ${POSTGRES_DB:-drwell_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - drwell_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U drwell"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis - Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: drwell_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secret}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - drwell_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: drwell_api
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-drwell}:${POSTGRES_PASSWORD:-drwell_secret}@postgres:5432/${POSTGRES_DB:-drwell_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - drwell_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drwell-api.rule=Host(`api.drwell.local`) || PathPrefix(`/api`)"
      - "traefik.http.routers.drwell-api.entrypoints=web"
      - "traefik.http.services.drwell-api.loadbalancer.server.port=8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker - Background Jobs
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: drwell_celery_worker
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-drwell}:${POSTGRES_PASSWORD:-drwell_secret}@postgres:5432/${POSTGRES_DB:-drwell_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
    volumes:
      - ./app:/app/app
    depends_on:
      - redis
      - postgres
      - api
    networks:
      - drwell_network
    command: celery -A app.workers.celery_app worker --loglevel=info --concurrency=4

  # Celery Beat - Scheduler
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: drwell_celery_beat
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-drwell}:${POSTGRES_PASSWORD:-drwell_secret}@postgres:5432/${POSTGRES_DB:-drwell_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
    volumes:
      - ./app:/app/app
    depends_on:
      - redis
      - postgres
      - celery_worker
    networks:
      - drwell_network
    command: celery -A app.workers.celery_app beat --loglevel=info

  # Flower - Celery Monitoring
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: drwell_flower
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery_worker
    networks:
      - drwell_network
    command: celery -A app.workers.celery_app flower --port=5555
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drwell-flower.rule=Host(`flower.drwell.local`)"
      - "traefik.http.routers.drwell-flower.entrypoints=web"
      - "traefik.http.services.drwell-flower.loadbalancer.server.port=5555"

networks:
  drwell_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
