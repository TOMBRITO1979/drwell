# Multi-stage build for production
FROM python:3.11-slim as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Copy and install requirements
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Final stage
FROM python:3.11-slim

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    postgresql-client \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user first
RUN useradd -m -u 1000 drwell

# Copy Python packages from builder to a location accessible by drwell user
COPY --from=builder /root/.local /home/drwell/.local

# Make sure scripts in .local are usable
ENV PATH=/home/drwell/.local/bin:$PATH

# Copy application code
COPY app ./app
COPY alembic ./alembic
COPY alembic.ini .

# Create uploads directory and set permissions
RUN mkdir -p /app/uploads && chown -R drwell:drwell /app /home/drwell/.local

# Switch to non-root user
USER drwell

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

EXPOSE 8000

# Default command
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
